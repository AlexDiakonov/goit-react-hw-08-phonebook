{"version":3,"sources":["ModuleStyles/navBar.module.css","ModuleStyles/PhoneBook.module.css","redux/auth/authSlectors.js","redux/auth/authActions.js","redux/auth/authOperations.js","Components/navigation/userFace.jsx","Components/navigation/NavBar.jsx","redux/contactActions.js","redux/contactOperations.js","redux/contactsSelectors.js","Components/phonebook/ContactForm.jsx","Components/phonebook/Filter.jsx","Components/phonebook/ContactsList.jsx","Components/phonebook/PhoneBook.jsx","Components/registration/Register.jsx","Components/Login/Login.jsx","routes.js","App.js","redux/contactsReducer.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["module","exports","state","auth","token","user","name","registerReq","createAction","registerSuc","registerErr","tokenReq","tokenSuc","tokenErr","loginReq","loginSuc","loginErr","logOutReq","logOutSuc","logOutErr","getCurrUserReq","getCurrUserSuc","getCurrUserErr","axios","defaults","baseURL","headers","common","Authorization","register","userData","dispatch","authActions","post","then","data","catch","error","login","logOut","err","getCurrentUser","getState","currentToken","get","connect","authSlectors","onLogout","authOperations","className","src","width","onClick","NavBar","authStatus","this","props","isAuthorised","style","navBar","activeClassName","isActive","navLink","to","Component","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","delContactRequest","delContactsSuccess","delContactsError","doFilter","filter","payload","addContact","number","contactAction","fetchContacts","tok","removeContact","id","delete","getContacts","contacts","items","getFilterValue","getVisibleContacts","createSelector","contact","toLowerCase","includes","toast","configure","ContactForm","handleChange","e","setState","target","value","handleChangeNum","notifiation","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","find","length","submitForm","onSubmit","details","type","onChange","mask","addContactBtn","mDPT","taskOperation","contactSelector","mapDispatchToProps","handleFilter","taskActions","searchForm","formDescription","searchInput","mDTP","deleteContact","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","contactName","contactDetails","contactPhone","removeButton","Phonebook","onFetchContacts","history","replace","phonebook","bg","appear","in","unmountOnExit","contactOperation","authSelectors","Register","password","email","onRegister","styles","registerForm","details2","regInput","emailInput","Login","onLogin","isAuth","path","App","onGetUser","routes","createReducer","_","info","action","combineReducers","initialState","middlewareSettings","getDefaultMiddleware","persistConfig","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","middleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e531acbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"navBar_navBar__l1Z_d\",\"navLink\":\"navBar_navLink__15Sab\",\"isActive\":\"navBar_isActive__3RT8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"PhoneBook_phonebook__2DcGW\",\"details\":\"PhoneBook_details__3ehCp\",\"addContactBtn\":\"PhoneBook_addContactBtn__Mo0pn\",\"registerForm\":\"PhoneBook_registerForm__1O8Of\",\"details2\":\"PhoneBook_details2__2nJeC\",\"emailInput\":\"PhoneBook_emailInput__2v-0A\",\"submitForm\":\"PhoneBook_submitForm__2xI-m\",\"contactDetails\":\"PhoneBook_contactDetails__2Lcd5\",\"contactName\":\"PhoneBook_contactName__33SH9\",\"removeButton\":\"PhoneBook_removeButton__Do9_U\",\"formDescription\":\"PhoneBook_formDescription__3bOPh\",\"searchForm\":\"PhoneBook_searchForm__aoNcE\"};","const isAuthorised = (state) => state.auth.token;\nconst getName = (state) => state.auth.user.name;\nexport default { isAuthorised, getName };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerReq = createAction(\"auth/regReq\");\nconst registerSuc = createAction(\"auth/regSuc\");\nconst registerErr = createAction(\"auth/regErr\");\n\nconst tokenReq = createAction(\"auth/tokenReq\");\nconst tokenSuc = createAction(\"auth/tokenSuc\");\nconst tokenErr = createAction(\"auth/tokenErr\");\n\nconst loginReq = createAction(\"auth/loginReq\");\nconst loginSuc = createAction(\"auth/loginSuc\");\nconst loginErr = createAction(\"auth/loginErr\");\n\nconst logOutReq = createAction(\"auth/logOutReq\");\nconst logOutSuc = createAction(\"auth/logOutSuc\");\nconst logOutErr = createAction(\"auth/logOutErr\");\n\nconst getCurrUserReq = createAction(\"auth/getCurrUserReq\");\nconst getCurrUserSuc = createAction(\"auth/getCurrUserSuc\");\nconst getCurrUserErr = createAction(\"auth/getCurrUserErr\");\n\nexport default {\n  registerReq,\n  registerSuc,\n  registerErr,\n\n  tokenReq,\n  tokenSuc,\n  tokenErr,\n\n  loginReq,\n  loginSuc,\n  loginErr,\n\n  logOutReq,\n  logOutSuc,\n  logOutErr,\n\n  getCurrUserReq,\n  getCurrUserSuc,\n  getCurrUserErr,\n};\n","import axios from \"axios\";\nimport authActions from \"./authActions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = ``;\n  },\n};\n\nconst register = (userData) => (dispatch) => {\n  dispatch(authActions.registerReq);\n  axios\n    .post(\"/users/signup\", userData)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(authActions.registerSuc(data));\n    })\n    .catch((error) => dispatch(authActions.registerErr(error)));\n};\n\nconst login = (userData) => (dispatch) => {\n  dispatch(authActions.loginReq());\n  axios\n    .post(\"/users/login\", userData)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(authActions.loginSuc(data));\n    })\n    .catch((error) => dispatch(authActions.loginErr(error)));\n};\n\nconst logOut = () => (dispatch) => {\n  dispatch(authActions.logOutReq());\n\n  axios\n    .post(\"users/logout\")\n    .then(() => {\n      token.unset();\n      dispatch(authActions.logOutSuc());\n    })\n    .catch((err) => dispatch(authActions.logOutErr(err)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: currentToken },\n  } = getState();\n  if (!currentToken) {\n    return;\n  }\n  token.set(currentToken);\n  dispatch(authActions.getCurrUserReq());\n\n  axios\n    .get(\"users/current\")\n    .then(({ data }) => dispatch(authActions.getCurrUserSuc(data)))\n    .catch((err) => dispatch(authActions.getCurrUserErr(err)));\n};\nexport default { register, login, logOut, getCurrentUser };\n\n// {data: token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Zjg4NzU3ODI0NTUwNjAwMTdlMTI0ODYiLCJpYXQiOjE2MDI3Nzg0ODh9.VytUs6sprYh9-j0_Yx1JY1t7ZbEqW7d4GRinwzD8UOA\";\n// user: email: \"alex@alex.gmail\";\n// name: \"Alexd\";}\n\n// yuriy@gmail.com\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport authSlectors from \"../../redux/auth/authSlectors\";\n\nimport \"../../ModuleStyles/userFace.css\";\nimport authOperations from \"../../redux/auth/authOperations\";\n\nfunction userFace({ onLogout, name }) {\n  const img =\n    \"https://www.funnyjunksite.com/pictures/wp-content/uploads/2015/08/Funny-Avatar-Photo.jpg\";\n  return (\n    <div className=\"userContainer\">\n      <img className=\"avatar\" src={img} width=\"60\"></img>\n      <div className=\"nameContainer\">\n        <span>Hello there, {name}</span>\n        <br></br>\n        <button className=\"logoutBTN\" onClick={onLogout}>\n          Log Out\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  name: authSlectors.getName(state),\n});\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\n  userFace\n);\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport style from \"../../ModuleStyles/navBar.module.css\";\nimport UserFace from \"./userFace\";\nimport authSlectors from \"../../redux/auth/authSlectors\";\nimport { connect } from \"react-redux\";\nclass NavBar extends Component {\n  render() {\n    const authStatus = this.props.isAuthorised;\n    return (\n      <header className={style.navBar}>\n        <NavLink\n          activeClassName={style.isActive}\n          className={style.navLink}\n          to=\"/register\"\n        >\n          Register\n        </NavLink>\n\n        {authStatus ? (\n          <UserFace />\n        ) : (\n          <NavLink\n            activeClassName={style.isActive}\n            className={style.navLink}\n            to=\"/login\"\n          >\n            Log in\n          </NavLink>\n        )}\n\n        <NavLink\n          activeClassName={style.isActive}\n          className={style.navLink}\n          to=\"/phonebook\"\n        >\n          Phone Book\n        </NavLink>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthorised: authSlectors.isAuthorised(state),\n});\nexport default connect(mapStateToProps)(NavBar);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addContactRequest = createAction('contact/addRequest');\nconst addContactSuccess = createAction('contact/addSuccess');\nconst addContactError = createAction('contact/addError');\n\nconst fetchContactsRequest = createAction('contact/fetchRequest');\nconst fetchContactsSuccess = createAction('contact/fetchSuccess');\nconst fetchContactsError = createAction('contact/fetchError');\n\nconst delContactRequest = createAction('contact/delContRequest');\nconst delContactsSuccess = createAction('contact/delContSuccess');\nconst delContactsError = createAction('contact/delContError');\n\nconst doFilter = createAction('contact/filter', (filter) => ({\n   payload: { filter },\n}));\n\nexport default {\n   addContactRequest,\n   addContactSuccess,\n   addContactError,\n\n   fetchContactsRequest,\n   fetchContactsSuccess,\n   fetchContactsError,\n\n   delContactRequest,\n   delContactsSuccess,\n   delContactsError,\n\n   doFilter,\n};\n","import contactAction from \"./contactActions\";\nimport axios from \"axios\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = ``;\n  },\n};\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactAction.addContactRequest());\n  axios\n    .post(\"/contacts\", {\n      name,\n      number,\n    })\n    .then(({ data }) => {\n      dispatch(contactAction.addContactSuccess(data));\n    })\n    .catch((error) => {\n      dispatch(contactAction.addContactError(error));\n    });\n};\n\nconst fetchContacts = (tok) => (dispatch) => {\n  token.set(tok);\n  dispatch(contactAction.fetchContactsRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => {\n      dispatch(contactAction.fetchContactsSuccess(data));\n    })\n    .catch((error) => {\n      dispatch(contactAction.fetchContactsError(error));\n    });\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactAction.delContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(contactAction.delContactsSuccess(id)))\n    .then((error) => contactAction.delContactsError(error));\n};\n\nexport default { addContact, fetchContacts, removeContact };\n","import { createSelector } from \"@reduxjs/toolkit\";\nconst getContacts = (state) => state.contacts.items;\nconst getFilterValue = (state) => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport default { getContacts, getFilterValue, getVisibleContacts };\n","import React, { Component } from 'react';\nimport style from '../../ModuleStyles/PhoneBook.module.css';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport InputMask from 'react-input-mask';\nimport { connect } from 'react-redux';\nimport taskOperation from '../../redux/contactOperations';\nimport 'react-toastify/dist/ReactToastify.css';\nimport contactSelector from '../../redux/contactsSelectors';\n\ntoast.configure();\n\nclass ContactForm extends Component {\n   state = { name: '', number: '' };\n   handleChange = (e) => {\n      this.setState({ name: e.target.value });\n   };\n   handleChangeNum = (e) => {\n      this.setState({ number: e.target.value });\n   };\n   notifiation = () => {\n      toast.error(`${this.state.name} is already in list!`, {\n         position: 'top-center',\n         autoClose: 2500,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: false,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   handleSubmit = (e) => {\n      e.preventDefault();\n      const contacts = this.props.contacts;\n      const { name } = this.state;\n      if (\n         contacts.find(\n            (contact) =>\n               contact.name.toLowerCase() === name.toLowerCase()\n         )\n      ) {\n         this.notifiation();\n      } else if (name.length === 0) {\n         return;\n      } else {\n         this.setState({ name: '', number: '' });\n         this.props.addContact(this.state.name, this.state.number);\n      }\n   };\n\n   render() {\n      const { name, number } = this.state;\n      return (\n         <form\n            className={style.submitForm}\n            onSubmit={this.handleSubmit}\n         >\n            <span className={style.details}>Name: </span>\n            <input\n               type=\"text\"\n               value={name}\n               onChange={this.handleChange}\n            ></input>\n            <br></br>\n            <span className={style.details}>Phone:</span>\n            <InputMask\n               mask=\"(999)-999-99-99\"\n               type=\"text\"\n               value={number}\n               onChange={this.handleChangeNum}\n            ></InputMask>\n\n            <br></br>\n            <button\n               className={style.addContactBtn}\n               onSubmit={this.handleSubmit}\n               type=\"submit\"\n            >\n               {name ? `Add ${name}` : 'Add Contact'}\n            </button>\n         </form>\n      );\n   }\n}\n\nconst mSTP = (state) => ({\n   contacts: contactSelector.getContacts(state),\n});\n\nconst mDPT = {\n   addContact: taskOperation.addContact,\n};\n\nexport default connect(mSTP, mDPT)(ContactForm);\n\nContactForm.propTypes = {\n   contacts: PropTypes.array,\n   addContact: PropTypes.func,\n};\n","import React from \"react\";\nimport style from \"../../ModuleStyles/PhoneBook.module.css\";\nimport PropTypes from \"prop-types\";\nimport taskActions from \"../../redux/contactActions\";\nimport { connect } from \"react-redux\";\nimport contactSelector from \"../../redux/contactsSelectors\";\n\nfunction Filter({ value, handleFilter }) {\n  return (\n    <form className={style.searchForm}>\n      <span className={style.formDescription}>Find contacts by name</span>\n      <input\n        className={style.searchInput}\n        onChange={(e) => handleFilter(e.target.value)}\n        value={value}\n        type=\"text\"\n      ></input>\n    </form>\n  );\n}\nconst mSTP = (state) => ({\n  value: contactSelector.getFilterValue(state),\n});\nconst mapDispatchToProps = {\n  handleFilter: taskActions.doFilter,\n};\n\nexport default connect(mSTP, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  handleFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import React from \"react\";\nimport style from \"../../ModuleStyles/PhoneBook.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport contactAction from \"../../redux/contactOperations\";\nimport contactSelector from \"../../redux/contactsSelectors\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map(({ name, id, number }) => (\n        <CSSTransition key={id} timeout={300} classNames=\"items\">\n          <li key={id}>\n            <span className={`${style.contactName} ${style.contactDetails}`}>\n              {name + \":\"}\n            </span>\n            <span className={`${style.contactPhone} ${style.contactDetails}`}>\n              {number}\n            </span>\n            <button\n              className={style.removeButton}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nconst mapStateToProps = (state) => ({\n  contacts: contactSelector.getVisibleContacts(state),\n});\nconst mDTP = {\n  deleteContact: contactAction.removeContact,\n};\nexport default connect(mapStateToProps, mDTP)(ContactList);\n\nContactList.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  onRemove: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactsList.jsx\";\nimport style from \"../../ModuleStyles/PhoneBook.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"../../ModuleStyles/animations.css\";\nimport ParticlesBg from \"particles-bg\";\nimport { connect } from \"react-redux\";\nimport contactOperation from \"../../redux/contactOperations\";\nimport contactSelector from \"../../redux/contactsSelectors\";\nimport authSelectors from \"../../redux/auth/authSlectors\";\n\nclass Phonebook extends Component {\n  componentDidMount() {\n    if (!this.props.auth) {\n      this.props.history.replace(\"/login\");\n      return;\n    }\n    this.props.onFetchContacts(this.props.token);\n  }\n  componentDidUpdate() {\n    if (!this.props.auth) {\n      this.props.history.replace(\"/login\");\n      return;\n    }\n  }\n  render() {\n    const { contacts } = this.props;\n    return (\n      <div className={style.phonebook}>\n        {this.props.auth && <ParticlesBg type=\"circle\" bg={true}></ParticlesBg>}\n\n        <CSSTransition\n          appear={true}\n          in={true}\n          timeout={2000}\n          unmountOnExit\n          classNames=\"logo\"\n        >\n          <h2>Phonebook</h2>\n        </CSSTransition>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter />}\n\n        <ContactList />\n      </div>\n    );\n  }\n}\nconst mSTP = (state) => ({\n  contacts: contactSelector.getContacts(state),\n  token: state.auth.token,\n  auth: authSelectors.isAuthorised(state),\n});\nconst mDTP = {\n  onFetchContacts: contactOperation.fetchContacts,\n};\n\nexport default connect(mSTP, mDTP)(Phonebook);\n","import React, { Component } from \"react\";\nimport styles from \"../../ModuleStyles/PhoneBook.module.css\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nclass Register extends Component {\n  state = { name: \"\", password: \"\", email: \"\" };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onRegister({ ...this.state });\n    this.setState({ name: \"\", password: \"\", email: \"\" });\n  };\n  render() {\n    const { email, password, name } = this.state;\n    return (\n      <form className={styles.registerForm} onSubmit={this.handleSubmit}>\n        <span className={styles.details2}>Name: </span>\n        <input\n          className={styles.regInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        ></input>\n        <br></br>\n        <span className={styles.details2}>Password:</span>\n        <input\n          className={styles.regInput}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={this.handleChange}\n        ></input>\n        <br></br>\n        <span className={styles.details2}>Email:</span>\n        <input\n          className={`${styles.emailInput} ${styles.regInput}`}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={this.handleChange}\n        ></input>\n        <button\n          className={styles.addContactBtn}\n          onSubmit={this.handleSubmit}\n          type=\"submit\"\n        >\n          Register Me\n        </button>\n      </form>\n    );\n  }\n}\nexport default connect(null, { onRegister: authOperations.register })(Register);\n","import React, { Component } from \"react\";\nimport styles from \"../../ModuleStyles/PhoneBook.module.css\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport authSlectors from \"../../redux/auth/authSlectors\";\n\nclass Login extends Component {\n  state = { email: \"\", password: \"\" };\n  componentDidUpdate() {\n    if (this.props.isAuth) {\n      this.props.history.replace(\"/phonebook\");\n      return;\n    }\n  }\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onLogin({ ...this.state });\n    this.setState({ email: \"\", password: \"\" });\n  };\n  render() {\n    const { email, password } = this.state;\n    return (\n      <form className={styles.registerForm} onSubmit={this.handleSubmit}>\n        <span className={styles.details2}>Email:</span>\n        <input\n          className={`${styles.emailInput} ${styles.regInput}`}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={this.handleChange}\n        ></input>\n        <br></br>\n        <span className={styles.details2}>Password:</span>\n        <input\n          className={styles.regInput}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={this.handleChange}\n        ></input>\n        <button\n          className={styles.addContactBtn}\n          onSubmit={this.handleSubmit}\n          type=\"submit\"\n        >\n          Log Me In\n        </button>\n      </form>\n    );\n  }\n}\nconst mSTP = (state) => ({\n  isAuth: authSlectors.isAuthorised(state),\n});\nexport default connect(mSTP, { onLogin: authOperations.login })(Login);\n","import Phonebook from \"./Components/phonebook/PhoneBook.jsx\";\nimport Register from \"./Components/registration/Register.jsx\";\nimport Login from \"./Components/Login/Login.jsx\";\n\nexport default {\n  phonebook: {\n    path: \"/phonebook\",\n    Component: Phonebook,\n  },\n  register: {\n    path: \"/register\",\n    Component: Register,\n  },\n  login: {\n    path: \"/login\",\n    Component: Login,\n  },\n};\n","import React, { Component } from \"react\";\nimport NavBar from \"./Components/navigation/NavBar\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport authOperations from \"./redux/auth/authOperations\";\nimport authSlectors from \"./redux/auth/authSlectors\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetUser();\n  }\n  render() {\n    const { phonebook, register, login } = routes;\n    return (\n      <>\n        <NavBar />\n        <Switch>\n          <Route path={phonebook.path} component={phonebook.Component} />\n          <Route path={register.path} component={register.Component} />\n          <Route path={login.path} component={login.Component} />\n          {!this.props.isAuth ? (\n            <Redirect to={login.path} />\n          ) : (\n            <Redirect to={phonebook.path} />\n          )}\n        </Switch>\n      </>\n    );\n  }\n}\nconst mSTP = (state) => ({\n  isAuth: authSlectors.isAuthorised(state),\n});\nexport default connect(mSTP, { onGetUser: authOperations.getCurrentUser })(App);\n","import { combineReducers } from \"redux\";\nimport { toast } from \"react-toastify\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactAction from \"./contactActions\";\nimport authActions from \"../redux/auth/authActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\nconst notifiation = () => {\n  toast.info(`First, you have to enter the name!`, {\n    position: \"top-center\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nconst addContact = (state, { payload }) => {\n  if (payload.name.length >= 1) {\n    return [...state, payload];\n  } else {\n    notifiation();\n  }\n};\nconst removeContact = (state, action) =>\n  state.filter((items) => items.id !== action.payload);\n\nconst setFilter = (state, action) => action.payload.filter;\n\nconst items = createReducer([], {\n  [contactAction.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactAction.addContactSuccess]: addContact,\n  [authActions.logOutSuc]: (_) => [],\n  [contactAction.delContactsSuccess]: removeContact,\n});\nconst error = createReducer(null, {\n  [contactAction.fetchContactsError]: (_, { payload }) => payload,\n});\n\nconst filter = createReducer(\"\", {\n  [contactAction.doFilter]: setFilter,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport authActions from \"./authActions\";\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [authActions.registerSuc]: (_, { payload }) => payload.user,\n  [authActions.loginSuc]: (_, { payload }) => payload.user,\n  [authActions.logOutSuc]: () => initialState,\n  [authActions.getCurrUserSuc]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuc]: (_, { payload }) => payload.token,\n  [authActions.loginSuc]: (_, { payload }) => payload.token,\n  [authActions.logOutSuc]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerErr]: (_, { payload }) => payload,\n  [authActions.loginErr]: (_, { payload }) => payload,\n  [authActions.logOutErr]: (_, { payload }) => payload,\n  [authActions.getCurrUserErr]: (_, { payload }) => payload,\n  [authActions.logOutSuc]: () => null,\n});\nexport default combineReducers({ user, error, token });\n","import contactsReducer from \"../redux/contactsReducer\";\nimport authReducer from \"../redux/auth/authReducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middlewareSettings = getDefaultMiddleware();\nconst persistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(persistConfig, authReducer),\n  },\n  middleware: [...middlewareSettings],\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}